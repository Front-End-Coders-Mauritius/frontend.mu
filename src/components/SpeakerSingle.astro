---
import { Image } from "@astrojs/image/components";
import IconDots from "./icons/icon-dots.astro";
import FecAnchor from "./FecAnchor.astro";
import IconFacebook from "./icons/icon-facebook.astro";
import IconTwitter from "./icons/icon-twitter.astro";
import IconLinkedin from "./icons/icon-linkedin.astro";
import MeetupAlbum from "./MeetupAlbum.astro";
import EventsList from "./EventsList.astro";
import LogoSpiral from "./LogoSpiral.astro";
import { getGithubUrl } from "../utils/fns";
import { vTransitionName } from "../utils/helpers";
import BaseHeading from "./base/BaseHeading.astro";

const props = Astro.props;
const speaker_photo = getGithubUrl(props.speaker.person.github_account);
---

<div>
  <!-- <pre>
        <code>{JSON.stringify(props.speaker, null, 2)}</code>
    </pre> -->
  <div data-title={props.speaker.person.name}>
    <div class="relative">
      <div class="pb-10 md:pb-24">
        <div class="contain">
          <div
            class="relative mx-auto px-8 py-3 sm:px-6 md:px-0 md:mx-0 md:py-24"
          >
            <div class="flex md:flex-row flex-col-reverse">
              <div>
                <!-- Content area -->
                <div>
                  <div
                    style={vTransitionName(
                      "speaker-name",
                      props.speaker.person.name
                    )}
                  >
                    <BaseHeading level={1} weight="bold">
                      {props.speaker.person.name}
                    </BaseHeading>
                  </div>

                  <EventsList sessions={props.speaker.sessions} />
                </div>

                <!-- Stats section -->
                <div class="mt-10">
                  <dl
                    class="grid grid-cols-1 md:grid-cols-2 gap-x-4 gap-y-4 md:gap-y-8"
                  >
                    {
                      props.speaker.Date && (
                        <div class="border-t-2 border-gray-100 pt-6">
                          <dt class="text-base font-medium text-verse-500">
                            Date
                          </dt>
                          <dd class="text-2xl font-extrabold tracking-tight text-gray-900 md:text-3xl">
                            {new Date(props.speaker.Date).toDateString()}
                          </dd>
                        </div>
                      )
                    }
                    {
                      props.speaker.Venue && (
                        <div class="border-t-2 border-gray-100 pt-4 md:pt-6">
                          <dt class="text-base font-medium text-verse-500">
                            Venue
                          </dt>
                          <dd class="text-2xl font-extrabold tracking-tight text-gray-900 md:text-3xl">
                            {props.speaker.Venue}
                          </dd>
                        </div>
                      )
                    }

                    <!-- Share Functions -->

                    <script is:inline>
                      function copy() {
                        const copyText = document.getElementById("myInput");
                        copyText.select();
                        copyText.setSelectionRange(0, 99999);
                        navigator.clipboard.writeText(copyText.value);
                      }

                      function shareOnFacebook() {
                        const navUrl =
                          "https://www.facebook.com/sharer/sharer.php?u=" +
                          `${window.location.href}`;
                        window.open(navUrl, "_blank");
                      }

                      function shareOnTwitter() {
                        const getTitleFromDataTitle = document
                          .querySelector("[data-title]")
                          .getAttribute("data-title");
                        const str = encodeURIComponent(
                          " #mauritius #frontendcoders "
                        );
                        const navUrl =
                          `https://twitter.com/intent/tweet?text=${getTitleFromDataTitle}${str}` +
                          `${window.location.href}`;
                        window.open(navUrl, "_blank");
                      }

                      function shareOnLinkedIn() {
                        const navUrl =
                          "http://www.linkedin.com/shareArticle?mini=true&url=" +
                          `${window.location.href}`;
                        window.open(navUrl, "_blank");
                      }
                    </script>

                    <!-- Share Buttons -->
                    <div class="border-y-2 border-gray-100 pt-4 md:pt-6">
                      <dt class="text-base font-medium text-verse-500">
                        Share
                      </dt>
                      <div class="flex gap-8 py-4">
                        <button
                          class="hover:text-[#4267B2] text-verse-500 dark:text-verse-200"
                          onclick="shareOnFacebook()"
                        >
                          <IconFacebook class="w-10 md:w-12" />
                        </button>
                        <button
                          class="hover:text-[#00acee] text-verse-500 dark:text-verse-200"
                          onclick="shareOnTwitter()"
                        >
                          <IconTwitter class="w-10 md:w-12" />
                        </button>
                        <button
                          class="hover:text-[#007db1] text-verse-500 dark:text-verse-200"
                          onclick="shareOnLinkedIn()"
                        >
                          <IconLinkedin class="w-10 md:w-12" />
                        </button>
                      </div>
                      <dd
                        class="flex justify-between rounded-md bg-gray-100 mt-2 px-2 py-1 lg:w-[450px]"
                      >
                        <input
                          id="myInput"
                          class="text-md break-words bg-gray-100pr-2 tracking-tight bg-gray-100 text-gray-600 line-clamp-3 w-[500px]"
                          type="text"
                          value={`https://frontend.mu/meetup/${props.routeId}/`}
                          onclick="copy()"
                        />
                        <div class="cursor-pointer" onclick="copy()">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-5 w-5"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <path
                              d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"
                            ></path>
                            <path
                              d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"
                            ></path>
                          </svg>
                        </div>
                      </dd>
                    </div>
                  </dl>
                </div>
              </div>

              <div class="flex-grow relative">
                <div class="w-full">
                  <Image
                    class="h-auto w-[80%] mx-auto md:mx-0 my-10 object-cover rounded-full lg:h-96 lg:w-96"
                    style={vTransitionName(
                      "speaker-avatar",
                      props.speaker.person.name
                    )}
                    src={speaker_photo}
                    alt={props.speaker.person.name}
                    title={props.speaker.person.name}
                    width={300}
                    height={300}
                  />
                  <div class="w-full >h-full absolute top-0">
                    <LogoSpiral class="w-full opacity-5 saturate-0" />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
