---
const props = Astro.props;
---

<div class="main-container hidden lg:grid">
  <div class="container">
    {
      props.currentAlbum &&
        props.currentAlbum.length > 0 &&
        props.currentAlbum.slice(0, 3).map((photo, index) => (
          <div class={`photo-container photo-${index + 1}`}>
            <img src={`${props.source}/${photo}`} class="" loading="lazy" />
          </div>
        ))
    }
  </div>
</div>

<script define:vars={{ props }}>
  function startAnimation() {
    setInterval(() => {
      if (!isMouseOver) {
        changeImages();
      }
    }, animationInterval);
  }

  function changeImages() {
    changeImgClassName();
    for (let i = 0; i < 3; i++) {
      // console.log("loop: " + i + " counter: " + counters[i]);
      changeImgSrc(i + 1, imageArray[i], counters[i]);
      counters[i]++;
      if (counters[i] >= imageArray[i].length) {
        counters[i] = 0;
      }
    }
  }

  function addEventListenerOnImages() {
    const imageContainers = document.querySelectorAll(".photo-container");
    imageContainers.forEach((imageContainer) => {
      imageContainer.addEventListener("mouseover", () => {
        isMouseOver = true;
      });
      imageContainer.addEventListener("mouseout", () => {
        isMouseOver = false;
      });
    });
  }

  function changeImgClassName() {
    // console.log('swapping classes...');
    const img1Selector = document.querySelector(".photo-1");
    const img2Selector = document.querySelector(".photo-2");
    const img3Selector = document.querySelector(".photo-3");

    if (img1Selector) {
      img1Selector.classList.remove("photo-1");
      img1Selector.classList.add("photo-2");
    }

    if (img2Selector) {
      img2Selector.classList.remove("photo-2");
      img2Selector.classList.add("photo-3");
    }

    if (img3Selector) {
      img3Selector.classList.remove("photo-3");
      img3Selector.classList.add("photo-1");
    }
  }

  function changeImgSrc(imgSelector, array, counter) {
    const img = document.querySelector(
      ".photo-container:nth-child(" + imgSelector + ") img"
    );

    if (img) {
      // console.log(`${props.source}/${array[counter]}`);
      img.style.opacity = "0.1";
      img.src = `${props.source}/${array[counter]}`;
      // img.style.opacity = "1";
      setTimeout(() => {
        img.style.opacity = "1";
      }, 300);
    }
  }

  function getSplitArray(array, size) {
    const splitSize = Math.floor(array.length / size);
    const resultArray = [];
    for (let i = 0; i < size; i++) {
      let arr = [];
      arr = array.splice(0, splitSize);
      resultArray.push(arr);
    }
    return resultArray;
  }

  //js execution starts here
  const imageArray = getSplitArray(props.currentAlbum, 3);
  let counters = [0, 0, 0];
  let isMouseOver = false;

  let animationInterval = props.animationSpeed || 3000;
  startAnimation();
  addEventListenerOnImages();
</script>

<style lang="postcss" scoped>
    :root{
      --photoSize : 230px;
    }

    .main-container{
        place-items: center;

        .container{
            width: 100px;
            height: 100px;
            position: relative;

            .photo-container{
                width: var(--photoSize);
                height: var(--photoSize);
                position: absolute;
                border-radius: 20px;
                z-index: 1;
                transition: all 0.8s ease;
                overflow: hidden;
              
                img{
                    width: 100%;
                    height:100%;
                    object-fit: cover;
                    border-radius: 20px;
                    transition: all 1s ease;
                }
                &:hover{
                    z-index: 2;
                }
            }

            .photo-1{
                    transform: scale(1) translate(30%,-50%);

                    &:hover{
                        transform: scale(1.2) translate(30%,-50%);
                    }
                }

            .photo-2{
                    transform: scale(1) translate(-50%,-30%);

                    &:hover{
                        transform: scale(1.2) translate(-50%,-30%);
                    }
            }


            .photo-3{
                    transform: scale(1) translate(20%,30%);

                    &:hover{
                        transform: scale(1.2) translate(20%,30%);
                    }
            }
        }
    }

    @media screen and (max-width: 600px) {
        .main-container{
            display:none;
        }
    }

    @media screen and (max-width: 1020px) {
        :root{
            --photoSize : 200px;
        }
    }

  </style>
