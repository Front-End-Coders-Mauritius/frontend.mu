---
import Layout from "../layouts/LayoutHome.astro";
import eventsResponse from "@data/meetups-raw.json";
import EventCardModernDetailed from "../components/event-card-modern-detailed.astro";
import BaseHeading from "../components/base/BaseHeading.astro";

// group response by year and sort by reverse date

const grouped = eventsResponse.data.reduce((acc, event) => {
  const year = new Date(event.Date).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(event);
  return acc;
}, {});

const title = "All meetups";
const description = "A list of all meetups we've held";
---

<Layout title={title} description={description}>
  <div class="page-all-meetups py-12">
    <div>
      <!-- start  -->
      <div class="past-events-container pb-4 md:pb-16">
        <div class="contain mx-auto">
          <div class="py-4 flex flex-col gap-2">
            <BaseHeading :level={1}>All meetups</BaseHeading>
            <p class="text-verse-700 dark:text-verse-300">
              Over the years, we've organized a lot of meetups. Here's a list of
              all of them.
            </p>
          </div>

          <!-- Render Grouped by year -->
          {
            Object.keys(grouped)
              .reverse()
              .map((year) => (
                <div class="grid pb-24 relative group is-page">
                  <div class="text-lg font-bold text-verse-900 uppercase md:hidden">
                    {year}
                  </div>{" "}
                  <div class="absolute origin-bottom-lef left-[-150px] top-[50px] opacity-5 -rotate-90 text-[100px] font-bold text-gray-900 group-hover-[.is-page]:left-[-170px] transition-all duration-300">
                    {year}
                  </div>
                  <div class="grid grid-cols-2 gap-4 relative z-10">
                    {grouped[year].map((event) => (
                      <EventCardModernDetailed event={event} />
                    ))}
                  </div>
                </div>
              ))
          }

          <!-- <div class="grid grid-cols-2 gap-8">
            {
              response.data.map((event) => (
                <EventCardModernDetailed event={event} />
              ))
            }
          </div> -->
        </div>
      </div>
      <!-- ends -->
    </div>
  </div>
</Layout>

<style scoped>
  @media screen and (min-width: 650px) {
    .grid-container {
      --minmax: 500px;
    }
  }

  @media screen and (max-width: 650px) {
    .grid-container {
      --minmax: 100%;
    }
  }
  .grid-container {
    display: grid;
    /* grid-template-columns: repeat(auto-fill, minmax(var(--minmax), 1fr)); */
  }
</style>
